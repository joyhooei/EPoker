// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace yigame.epoker {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.Kernel;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.Serialization;
    using yigame.epoker;
    
    
    public class PlayerPositionsVCBase : uFrame.MVVM.ViewComponent {
        
        public virtual CoreGameRootViewModel CoreGameRoot {
            get {
                return (CoreGameRootViewModel)this.View.ViewModelObject;
            }
        }
        
        public virtual void ExecuteRefreshCoreGame() {
            CoreGameRoot.RefreshCoreGame.OnNext(new RefreshCoreGameCommand() { Sender = CoreGameRoot });
        }
        
        public virtual void ExecuteRootMatchBegan() {
            CoreGameRoot.RootMatchBegan.OnNext(new RootMatchBeganCommand() { Sender = CoreGameRoot });
        }
        
        public virtual void ExecuteQuitCoreGame() {
            CoreGameRoot.QuitCoreGame.OnNext(new QuitCoreGameCommand() { Sender = CoreGameRoot });
        }
        
        public virtual void ExecutePlayerJoin() {
            CoreGameRoot.PlayerJoin.OnNext(new PlayerJoinCommand() { Sender = CoreGameRoot });
        }
        
        public virtual void ExecutePlayerLeave() {
            CoreGameRoot.PlayerLeave.OnNext(new PlayerLeaveCommand() { Sender = CoreGameRoot });
        }
        
        public virtual void ExecuteCalcPosIdAndRepos() {
            CoreGameRoot.CalcPosIdAndRepos.OnNext(new CalcPosIdAndReposCommand() { Sender = CoreGameRoot });
        }
        
        public virtual void ExecuteRefreshCoreGame(RefreshCoreGameCommand command) {
            command.Sender = CoreGameRoot;
            CoreGameRoot.RefreshCoreGame.OnNext(command);
        }
        
        public virtual void ExecuteRootMatchBegan(RootMatchBeganCommand command) {
            command.Sender = CoreGameRoot;
            CoreGameRoot.RootMatchBegan.OnNext(command);
        }
        
        public virtual void ExecuteQuitCoreGame(QuitCoreGameCommand command) {
            command.Sender = CoreGameRoot;
            CoreGameRoot.QuitCoreGame.OnNext(command);
        }
        
        public virtual void ExecutePlayerJoin(PlayerJoinCommand command) {
            command.Sender = CoreGameRoot;
            CoreGameRoot.PlayerJoin.OnNext(command);
        }
        
        public virtual void ExecutePlayerLeave(PlayerLeaveCommand command) {
            command.Sender = CoreGameRoot;
            CoreGameRoot.PlayerLeave.OnNext(command);
        }
        
        public virtual void ExecuteCalcPosIdAndRepos(CalcPosIdAndReposCommand command) {
            command.Sender = CoreGameRoot;
            CoreGameRoot.CalcPosIdAndRepos.OnNext(command);
        }
    }
}
