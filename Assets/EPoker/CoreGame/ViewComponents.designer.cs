// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace yigame.epoker {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.Kernel;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.Serialization;
    using yigame.epoker;
    
    
    public class PlayerPositionsVCBase : uFrame.MVVM.ViewComponent {
        
        public virtual CoreGameRootViewModel CoreGameRoot {
            get {
                return (CoreGameRootViewModel)this.View.ViewModelObject;
            }
        }
        
        public virtual void ExecuteRootMatchBegan() {
            CoreGameRoot.RootMatchBegan.OnNext(new RootMatchBeganCommand() { Sender = CoreGameRoot });
        }
        
        public virtual void ExecuteSimulateMatchBegan() {
            CoreGameRoot.SimulateMatchBegan.OnNext(new SimulateMatchBeganCommand() { Sender = CoreGameRoot });
        }
        
        public virtual void ExecuteResetPlayerCount(Int32 arg) {
            CoreGameRoot.ResetPlayerCount.OnNext(new ResetPlayerCountCommand() { Sender = CoreGameRoot, Argument = arg });
        }
        
        public virtual void ExecuteResetPlayerCount(ResetPlayerCountCommand command) {
            command.Sender = CoreGameRoot;
            CoreGameRoot.ResetPlayerCount.OnNext(command);
        }
        
        public virtual void ExecuteRootMatchBegan(RootMatchBeganCommand command) {
            command.Sender = CoreGameRoot;
            CoreGameRoot.RootMatchBegan.OnNext(command);
        }
        
        public virtual void ExecuteSimulateMatchBegan(SimulateMatchBeganCommand command) {
            command.Sender = CoreGameRoot;
            CoreGameRoot.SimulateMatchBegan.OnNext(command);
        }
    }
}
