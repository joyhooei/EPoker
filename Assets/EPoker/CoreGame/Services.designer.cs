// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace yigame.epoker {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.MVVM;
    using uFrame.Kernel;
    using uFrame.IOC;
    using UniRx;
    using yigame.epoker;
    using UnityEngine;
    
    
    public class GameServiceBase : uFrame.Kernel.SystemServiceMonoBehavior {
        
        /// <summary>
        /// This method is invoked whenever the kernel is loading.
        /// Since the kernel lives throughout the entire lifecycle of the game, this will only be invoked once.
        /// </summary>
        public override void Setup() {
            base.Setup();
            this.OnEvent<OpenCoreGame>().Subscribe(this.OpenCoreGameHandler);
            this.OnEvent<CloseCoreGame>().Subscribe(this.CloseCoreGameHandler);
            this.OnEvent<OnCoreGameEvent>().Subscribe(this.OnCoreGameEventHandler);
        }
        
        /// <summary>
        // This method is executed when using this.Publish(new OpenCoreGame())
        /// </summary>
        public virtual void OpenCoreGameHandler(OpenCoreGame data) {
            // Process the commands information.  Also, you can publish new events by using the line below.
            // this.Publish(new AnotherEvent())
        }
        
        /// <summary>
        // This method is executed when using this.Publish(new CloseCoreGame())
        /// </summary>
        public virtual void CloseCoreGameHandler(CloseCoreGame data) {
            // Process the commands information.  Also, you can publish new events by using the line below.
            // this.Publish(new AnotherEvent())
        }
        
        /// <summary>
        // This method is executed when using this.Publish(new OnCoreGameEvent())
        /// </summary>
        public virtual void OnCoreGameEventHandler(OnCoreGameEvent data) {
            // Process the commands information.  Also, you can publish new events by using the line below.
            // this.Publish(new AnotherEvent())
        }
    }
}
