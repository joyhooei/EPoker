// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace yigame.epoker {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.Kernel;
    using uFrame.IOC;
    using uFrame.MVVM;
    using uFrame.Serialization;
    using UniRx;
    
    
    public class CoreGameRootControllerBase : uFrame.MVVM.Controller {
        
        private uFrame.MVVM.IViewModelManager _CoreGameRootViewModelManager;
        
        private CoreGameRootViewModel _CoreGameRoot;
        
        [uFrame.IOC.InjectAttribute("CoreGameRoot")]
        public uFrame.MVVM.IViewModelManager CoreGameRootViewModelManager {
            get {
                return _CoreGameRootViewModelManager;
            }
            set {
                _CoreGameRootViewModelManager = value;
            }
        }
        
        [uFrame.IOC.InjectAttribute("CoreGameRoot")]
        public CoreGameRootViewModel CoreGameRoot {
            get {
                return _CoreGameRoot;
            }
            set {
                _CoreGameRoot = value;
            }
        }
        
        public IEnumerable<CoreGameRootViewModel> CoreGameRootViewModels {
            get {
                return CoreGameRootViewModelManager.OfType<CoreGameRootViewModel>();
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(uFrame.MVVM.ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeCoreGameRoot(((CoreGameRootViewModel)(viewModel)));
        }
        
        public virtual CoreGameRootViewModel CreateCoreGameRoot() {
            return ((CoreGameRootViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override uFrame.MVVM.ViewModel CreateEmpty() {
            return new CoreGameRootViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeCoreGameRoot(CoreGameRootViewModel viewModel) {
            // This is called when a CoreGameRootViewModel is created
            CoreGameRootViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(uFrame.MVVM.ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            CoreGameRootViewModelManager.Remove(viewModel);
        }
    }
}
