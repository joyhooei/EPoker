// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace yigame.epoker {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using Invert.StateMachine;
    
    
    public class UIFlowSM : Invert.StateMachine.StateMachine {
        
        private Invert.StateMachine.StateMachineTrigger _Login;
        
        private Invert.StateMachine.StateMachineTrigger _Logout;
        
        private Invert.StateMachine.StateMachineTrigger _EnterRoom;
        
        private Invert.StateMachine.StateMachineTrigger _QuitRoom;
        
        private UILogin _UILogin;
        
        private UILobby _UILobby;
        
        private UIRoom _UIRoom;
        
        public UIFlowSM(uFrame.MVVM.ViewModel vm, string propertyName) : 
                base(vm, propertyName) {
        }
        
        public UIFlowSM() : 
                base(null, string.Empty) {
        }
        
        public override Invert.StateMachine.State StartState {
            get {
                return this.UILogin;
            }
        }
        
        public virtual Invert.StateMachine.StateMachineTrigger Login {
            get {
                if (this._Login == null) {
                    this._Login = new StateMachineTrigger(this , "Login");
                }
                return _Login;
            }
            set {
                _Login = value;
            }
        }
        
        public virtual Invert.StateMachine.StateMachineTrigger Logout {
            get {
                if (this._Logout == null) {
                    this._Logout = new StateMachineTrigger(this , "Logout");
                }
                return _Logout;
            }
            set {
                _Logout = value;
            }
        }
        
        public virtual Invert.StateMachine.StateMachineTrigger EnterRoom {
            get {
                if (this._EnterRoom == null) {
                    this._EnterRoom = new StateMachineTrigger(this , "EnterRoom");
                }
                return _EnterRoom;
            }
            set {
                _EnterRoom = value;
            }
        }
        
        public virtual Invert.StateMachine.StateMachineTrigger QuitRoom {
            get {
                if (this._QuitRoom == null) {
                    this._QuitRoom = new StateMachineTrigger(this , "QuitRoom");
                }
                return _QuitRoom;
            }
            set {
                _QuitRoom = value;
            }
        }
        
        public virtual UILogin UILogin {
            get {
                if (this._UILogin == null) {
                    this._UILogin = new UILogin();
                }
                return _UILogin;
            }
            set {
                _UILogin = value;
            }
        }
        
        public virtual UILobby UILobby {
            get {
                if (this._UILobby == null) {
                    this._UILobby = new UILobby();
                }
                return _UILobby;
            }
            set {
                _UILobby = value;
            }
        }
        
        public virtual UIRoom UIRoom {
            get {
                if (this._UIRoom == null) {
                    this._UIRoom = new UIRoom();
                }
                return _UIRoom;
            }
            set {
                _UIRoom = value;
            }
        }
        
        public override void Compose(System.Collections.Generic.List<Invert.StateMachine.State> states) {
            base.Compose(states);
            UILogin.Login = new StateTransition("Login", UILogin, UILobby);
            Transitions.Add(UILogin.Login);
            UILogin.AddTrigger(Login, UILogin.Login);
            UILogin.StateMachine = this;
            states.Add(UILogin);
            UILobby.Logout = new StateTransition("Logout", UILobby, UILogin);
            Transitions.Add(UILobby.Logout);
            UILobby.EnterRoom = new StateTransition("EnterRoom", UILobby, UIRoom);
            Transitions.Add(UILobby.EnterRoom);
            UILobby.AddTrigger(Logout, UILobby.Logout);
            UILobby.AddTrigger(EnterRoom, UILobby.EnterRoom);
            UILobby.StateMachine = this;
            states.Add(UILobby);
            UIRoom.QuitRoom = new StateTransition("QuitRoom", UIRoom, UILobby);
            Transitions.Add(UIRoom.QuitRoom);
            UIRoom.AddTrigger(QuitRoom, UIRoom.QuitRoom);
            UIRoom.StateMachine = this;
            states.Add(UIRoom);
        }
    }
    
    public class UILogin : Invert.StateMachine.State {
        
        private Invert.StateMachine.StateTransition _Login;
        
        public Invert.StateMachine.StateTransition Login {
            get {
                return _Login;
            }
            set {
                _Login = value;
            }
        }
        
        public override string Name {
            get {
                return "UILogin";
            }
        }
        
        public virtual void LoginTransition() {
            this.Transition(this.Login);
        }
    }
    
    public class UILobby : Invert.StateMachine.State {
        
        private Invert.StateMachine.StateTransition _Logout;
        
        private Invert.StateMachine.StateTransition _EnterRoom;
        
        public Invert.StateMachine.StateTransition Logout {
            get {
                return _Logout;
            }
            set {
                _Logout = value;
            }
        }
        
        public Invert.StateMachine.StateTransition EnterRoom {
            get {
                return _EnterRoom;
            }
            set {
                _EnterRoom = value;
            }
        }
        
        public override string Name {
            get {
                return "UILobby";
            }
        }
        
        public virtual void LogoutTransition() {
            this.Transition(this.Logout);
        }
        
        public virtual void EnterRoomTransition() {
            this.Transition(this.EnterRoom);
        }
    }
    
    public class UIRoom : Invert.StateMachine.State {
        
        private Invert.StateMachine.StateTransition _QuitRoom;
        
        public Invert.StateMachine.StateTransition QuitRoom {
            get {
                return _QuitRoom;
            }
            set {
                _QuitRoom = value;
            }
        }
        
        public override string Name {
            get {
                return "UIRoom";
            }
        }
        
        public virtual void QuitRoomTransition() {
            this.Transition(this.QuitRoom);
        }
    }
}
